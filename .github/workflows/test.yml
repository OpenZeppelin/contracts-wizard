name: Test

on:
  push:
    branches: [master]
  pull_request: {}

jobs:
  format-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Set up environment
        uses: ./.github/actions/setup
      - name: Check formatting
        run: yarn format:check
      - name: Run linter
        run: yarn lint

  deno-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Set up Deno 1.46.3 (matching Netlify edge function environment)
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: '1.46.3'
      - name: Set up environment
        uses: ./.github/actions/setup
      - name: Deno check API
        run: yarn type:check:api

  mcp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Set up environment
        uses: ./.github/actions/setup
      - name: Run tests
        run: yarn test
        working-directory: packages/mcp

  build:
    timeout-minutes: 90
    strategy:
      matrix:
        package:
          - solidity
          - cairo
          - stellar
          - stylus

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Set up environment
        uses: ./.github/actions/setup

      # ----------------------------
      # Solidity setup
      - name: Install Foundry
        if: matrix.package == 'solidity'
        uses: foundry-rs/foundry-toolchain@82dee4ba654bd2146511f85f0d013af94670c4de #v1.4.0

      # ----------------------------
      # Stellar setup

      - name: Free up disk space
        if: matrix.package == 'stellar'
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android
          df -h
      
      # - name: Get scaffold-stellar latest commit SHA
      #   if: matrix.package == 'stellar'
      #   id: get-scaffold-sha
      #   run: |
      #     echo "sha=$(git ls-remote https://github.com/ahalabs/scaffold-stellar HEAD | cut -f1)" >> $GITHUB_OUTPUT

      # - name: Cache Scaffold CLIs
      #   if: matrix.package == 'stellar'
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #     key: cargo-scaffold-${{ matrix.package }}-${{ steps.get-scaffold-sha.outputs.sha }}
      #     restore-keys: |
      #       cargo-scaffold-${{ matrix.package }}-
      #       cargo-scaffold-
      #       cargo-scaffold-

      # - name: Set up rust toolchain
      #   uses: actions-rust-lang/setup-rust-toolchain@v1
      #   with:
      #     toolchain: stable, nightly
      #     components: clippy, rustfmt, llvm-tools-preview
      #     target: wasm32v1-none

      # - name: Set up Stellar CLI
      #   if: matrix.package == 'stellar'
      #   uses: stellar/stellar-cli@v22.8.2

      # ----------------------------
      - name: Compile TypeScript
        run: yarn tsc
        working-directory: packages/core/${{matrix.package}}
      - name: Check Svelte
        run: yarn svelte-check
        working-directory: packages/ui
      - name: Run tests
        run: yarn test
        working-directory: packages/core/${{matrix.package}}
